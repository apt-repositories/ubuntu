{
	"raw": {},
	"required": [
		"Filename",
		"Size"
	],
	"package": "librust-inlinable-string-dev",
	"source": "rust-inlinable-string",
	"version": "0.1.15-1",
	"section": "universe/rust",
	"priority": "optional",
	"architecture": "amd64",
	"depends": [
		"librust-serde-1+default-dev"
	],
	"installedSize": 113,
	"maintainer": "Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>",
	"description": "`inlinable_string` crate provides the `InlinableString` type -- an owned, grow-able UTF-8 string that stores small strings inline and avoids heap-allocation -- and the `StringExt` trait which abstracts string operations over both `std::string::String` and `InlinableString` (or even your own custom string type) - Rust source code",
	"filename": "pool/universe/r/rust-inlinable-string/librust-inlinable-string-dev_0.1.15-1_amd64.deb",
	"size": 19724,
	"md5": "d25f6fe115612ff032ec816e85a28550",
	"sha1": "b28ce754c97f15b795fe8d287c81d8e8306b8d35",
	"sha256": "1e5b43cd679ef0f21623d49681d159d226d39023c13cb28134ed433b4aee73d1",
	"sha512": "3299c25f796464cd2d394281f527bba2cdc6739500d3d16c24dac97c9b10b75455e5ca013c54925a45f753e4707ae59125d59b3f0b1b8dcdd7e9d31273a170a4",
	"descriptionMd5": "25b2d1f1bfb497cf4bcef8190dbbb360"
}